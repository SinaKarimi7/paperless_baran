var valid = require('validator');
var db = require('./mongo_schemas');


// for debugging set the debug_mode var, true

var debug_mode = false;


module.exports = (function() {
  var _return = {};
  // ok
  _return.email = function(email, callback) {
    if (callback) callback(valid.isEmail(email));
  };

  _return.no_db_mobile = function(mobile, callback) {
    callback ? callback(valid.isNumeric(mobile) && valid.isLength(mobile, 10, 11)) : '';
  };

  _return.password = function(password, callback) {
    if (valid.isLength(password, 6, 20)) {
      if (callback) callback(true);
    } else {
      if (callback) callback(false);
    }
  };

  _return.first_name = function(first_name, callback) {
    if (callback) callback(valid.isLength(first_name, 2, 25));
  };

  _return.last_name = function(last_name, callback) {
    if (callback) callback(valid.isLength(last_name, 2, 35));
  };

  _return.birth_year = function(birth_year, callback) {
    var small = new Date().getFullYear() - 714; // 93 year later
    var big = new Date().getFullYear() - 631; // 10 year later

    if (callback) {
      if (valid.isLength(birth_year, 4, 4)) {
        if ((birth_year > small) && (birth_year < big)) {
          callback(true);
        } else {
          callback(false);
        }
      } else {
        callback(false);
      }
    }
  };

  _return.month = function(month, callback) {
    if (month <= 12 && month >= 1) {
      if (callback) callback(true);
    } else {
      if (callback) callback(false);
    }
  };


  _return.day = function(day, callback) {
    if (day <= 31 && day >= 1) {
      if (callback) callback(true);
    } else {
      if (callback) callback(false);
    }
  };

  _return.text = function(text, callback) {
    if (text <= 300 && text >= 1) {
      if (callback) callback(true);
    } else {
      if (callback) callback(false);
    }
  };

  _return.all = function(data, callback) {
    var ok = true;
    var v = {};
    if (data.email) {
      v.email = true;
      _return.email(data.email, function(res) {
        if (!res) {
          ok = false;
          v.email = false;
        }
      });
    }
    if (data.password) {
      v.password = true;
      _return.password(data.password, function(res) {
        if (!res) {
          ok = false;
          v.password = false;
        }
      });
    }

    if (data.first_name) {
      v.first_name = true;
      _return.first_name(data.first_name, function(res) {
        if (!res) {
          ok = false;
          v.first_name = false;
        }
      });
    }
    if (data.last_name) {
      v.last_name = true;
      _return.last_name(data.last_name, function(res) {
        if (!res) {
          ok = false;
          v.last_name = false;
        }
      });
    }
    if (data.birth_year || data.year) {
      data.birth_year = data.birth_year || data.year;
      v.birth_year = true;
      _return.birth_year(data.birth_year, function(res) {
        if (!res) {
          ok = false;
          v.birth_year = false;
        }
      });
    }
    if (data.month) {
      v.month = true;
      _return.month(data.month, function(res) {
        if (!res) {
          ok = false;
          v.month = false;
        }
      });
    }
    if (data.day) {
      v.day = true;
      _return.day(data.day, function(res) {
        if (!res) {
          ok = false;
          v.day = false;
        }
      });
    }
    if (data.mobile) {
      v.mobile = true;
      _return.mobile(data.mobile, function(res) {
        if (!res) {
          v.mobile = false;
          ok = false;
          if (callback) callback(ok, v);
          if (debug_mode) console.log(v);
        } else {
          if (callback) callback(ok, v);
          if (debug_mode) console.log(v);
        }
      });
    } else {
      if (callback) callback(ok, v);
      if (debug_mode) console.log(v);
    }
  };

  return _return;
})();
